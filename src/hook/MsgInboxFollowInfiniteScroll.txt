// import React, { useEffect } from 'react';
// import styled from 'styled-components';
// // import { useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil';
// import { useInView } from 'react-intersection-observer';
// // import CopyRightFooter from '../conponents/CopyRightFooter';

// import { useRecoilState, useResetRecoilState } from 'recoil';
// import { getMsgInboxMessages } from '../services/message/getMsgInboxMessages';
// import {
//   cursorIdAtomByMsgInboxMessage,
//   msgInboxMessageHashMapAtom,
// } from '../states/MsgInboxAtom';

// const MsgInboxFollowInfiniteScroll: React.FC = () => {
//   const [cursorId, setCursorId] = useRecoilState(cursorIdAtomByMsgInboxMessage);

//   const [ref, inView] = useInView();

//   const [msgInboxMessageHashMap, setMsgInboxMessageHashMap] = useRecoilState(
//     msgInboxMessageHashMapAtom,
//   );
//   const resetMsgInboxMessageHashMap = useResetRecoilState(
//     msgInboxMessageHashMapAtom,
//   );
//   const restCursorIdByMsgInbox = useResetRecoilState(
//     cursorIdAtomByMsgInboxMessage,
//   );

//   const callback = () => {
//     getMsgInboxMessages(cursorId)
//       .then((res) => {
//         if (res.msgInboxMessageList.length > 0) {
//           const newMsgInboxMessageHashMap = new Map(msgInboxMessageHashMap);
//           res.msgInboxMessageList.forEach((msgInbxMessage) => {
//             newMsgInboxMessageHashMap.set(
//               msgInbxMessage.username,
//               msgInbxMessage,
//             );
//           });

//           setMsgInboxMessageHashMap(newMsgInboxMessageHashMap);

//           setCursorId(res.cursorId);
//         }
//       })
//       .catch((err) => {
//         throw err;
//       });
//   };
//   useEffect(() => {
//     if (inView) {
//       callback();
//     }
//   }, [inView]);

//   useEffect(() => {
//     return () => {
//       resetMsgInboxMessageHashMap();
//       restCursorIdByMsgInbox();
//     };
//   }, []);

//   return (
//     <ScrollBottomContainer ref={ref}>
//       <div>테스트</div>
//     </ScrollBottomContainer>
//   );
// };

// const ScrollBottomContainer = styled.div`
//   margin: 0px auto;
// `;

// export default MsgInboxFollowInfiniteScroll;
