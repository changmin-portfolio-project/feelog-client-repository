import React, { useEffect } from 'react';
import { useInView } from 'react-intersection-observer';
import styled from 'styled-components';

import { useNavigate } from 'react-router-dom';
import { useRecoilState, useResetRecoilState } from 'recoil';
import { ZERO_CURSOR_ID } from '../const/PageConfigConst';
import { MESSAGE_INBOX_PATH } from '../const/PathConst';
import { getMsgConversationList } from '../services/message/getMsgConversationList';
import {
  cursorIdAtomByMsgConversation,
  msgConversationListAtom,
} from '../states/MessageAtom';

interface MsgConversationInfiniteScrollProps {
  targetUserId: string;
}

const MsgConversationInfiniteScroll: React.FC<
  MsgConversationInfiniteScrollProps
> = ({ targetUserId }) => {
  const navigate = useNavigate();
  const [cursorId, setCursorId] = useRecoilState(cursorIdAtomByMsgConversation);

  const [ref, inView] = useInView();

  const [msgConversationList, setMsgConversationList] = useRecoilState(
    msgConversationListAtom,
  );

  const resetMsgConversation = useResetRecoilState(msgConversationListAtom);
  const resetCursorIdByMsgConversation = useResetRecoilState(
    cursorIdAtomByMsgConversation,
  );

  const callback = () => {
    if (cursorId !== ZERO_CURSOR_ID) {
      getMsgConversationList(cursorId, targetUserId)
        .then((res) => {
          if (res.msgConversationRspList.length > 0) {
            setMsgConversationList((prev) => [
              ...prev,
              ...res.msgConversationRspList,
            ]);
          }
          setCursorId(res.cursorId);
        })
        .catch((err) => {
          navigate(MESSAGE_INBOX_PATH);
        });
    }
  };

  useEffect(() => {
    if (inView) {
      callback();
    }
  }, [inView]);

  useEffect(() => {
    return () => {
      resetMsgConversation();
      resetCursorIdByMsgConversation();
    };
  }, []);

  return (
    <ScrollBottomContainer ref={ref}>
      <div>테스트</div>
    </ScrollBottomContainer>
  );
};

const ScrollBottomContainer = styled.div`
  // margin-top: 100px;
`;

export default MsgConversationInfiniteScroll;
